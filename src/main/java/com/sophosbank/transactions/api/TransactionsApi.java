/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sophosbank.transactions.api;

import com.sophosbank.transactions.model.FilterRequest;
import com.sophosbank.transactions.model.TransactionSophos;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import java.math.BigDecimal;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-02-08T15:16:09.096075-05:00[America/Bogota]")
@Validated
public interface TransactionsApi {

    @Operation(summary = "List transactions", description = "By passing in the appropriate options, you can search for available inventory in the system ", tags={ "developers" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "list", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = TransactionSophos.class)))),
        
        @ApiResponse(responseCode = "400", description = "bad input parameter") })
    @RequestMapping(value = "/transactions/v1/list",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<TransactionSophos>> transactionsList();

    @Operation(summary = "Filter transactions", description = "By passing in the appropriate options, you can search for available inventory in the system ", tags={  })
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "list", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = TransactionSophos.class)))),

            @ApiResponse(responseCode = "400", description = "bad input parameter"),

            @ApiResponse(responseCode = "404", description = "not found") })
    @RequestMapping(value = "/transactions/v1/filter",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<TransactionSophos>> transactionsFilter(
            @Parameter(in = ParameterIn.QUERY, description = "Transaction Type" ,schema=@Schema()) @Valid @RequestParam(value = "transactionType", required = false) String transactionType,
            @Parameter(in = ParameterIn.QUERY, description = "Transaction Type" ,schema=@Schema()) @Valid @RequestParam(value = "transactionAmount", required = false) Double transactionAmount,
            @Parameter(in = ParameterIn.QUERY, description = "Transaction Type" ,schema=@Schema()) @Valid @RequestParam(value = "counterpartyName", required = false) String counterpartyName);

    @Operation(summary = "Filter transactions", description = "By passing in the appropriate options, you can search for available inventory in the system ", tags={  })
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "list", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = TransactionSophos.class)))),

            @ApiResponse(responseCode = "400", description = "bad input parameter"),

            @ApiResponse(responseCode = "404", description = "not found") })
    @RequestMapping(value = "/transactions/v1/filter",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<List<TransactionSophos>> transactionsPostFilter(@Parameter(in = ParameterIn.DEFAULT, description = "", schema=@Schema()) @Valid @RequestBody FilterRequest body);
}

